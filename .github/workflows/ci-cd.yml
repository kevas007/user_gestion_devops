name: CI/CD Gestion Users

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: appdb
          MYSQL_USER: user
          MYSQL_PASSWORD: pass
        options: |
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install deps
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do mysqladmin ping -h127.0.0.1 -uroot -proot && break; sleep 2; done

      - name: Migrations & Tests
        run: |
          cd backend
          flask db upgrade
          pytest --junitxml=reports/backend-results.xml

      - name: Upload backend report
        uses: actions/upload-artifact@v3.1.3
        with:
          name: backend-tests-report
          path: backend/reports/backend-results.xml

  test-frontend:
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install & Test Frontend
        run: |
          cd frontend
          npm ci
          npm test -- --ci --reporters=jest-junit

      - name: Upload frontend report
        uses: actions/upload-artifact@v3.1.3
        with:
          name: frontend-tests-report
          path: frontend/junit.xml

  build-and-push:
    runs-on: ubuntu-latest
    needs: [ test-backend, test-frontend ]
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Backend
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/gestion-users-backend:${{ github.sha }} ./backend
          docker push ghcr.io/${{ github.repository_owner }}/gestion-users-backend:${{ github.sha }}

      - name: Build & Push Frontend
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/gestion-users-frontend:${{ github.sha }} ./frontend
          docker push ghcr.io/${{ github.repository_owner }}/gestion-users-frontend:${{ github.sha }}
