# .github/workflows/ci-cd.yml
name: CI/CD Gestion Users

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test-backend:
    name: ðŸ§ª Tests Backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: appdb
          MYSQL_USER: user
          MYSQL_PASSWORD: pass
        ports:
          - 3306:3306
        options: |
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_URL: mysql+pymysql://user:pass@127.0.0.1:3306/appdb
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -uroot -proot && break
            sleep 2
          done

      - name: Apply database migrations
        run: |
          cd backend
          flask db upgrade

      - name: Run backend tests
        run: |
          cd backend
          pytest --junitxml=reports/backend-results.xml

      - name: Upload backend test report
        uses: actions/upload-artifact@v3.1.1
        with:
          name: backend-tests-report
          path: backend/reports/backend-results.xml

  test-frontend:
    name: ðŸ§ª Tests Frontend
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --ci --reporters=jest-junit

      - name: Upload frontend test report
        uses: actions/upload-artifact@v3.1.1
        with:
          name: frontend-tests-report
          path: frontend/junit.xml

  build-and-push:
    name: ðŸ“¦ Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [ test-backend, test-frontend ]
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push backend image
        run: |
          docker build -t ${{ env.REGISTRY }}/gestion-users-backend:${{ env.IMAGE_TAG }} ./backend
          docker push ${{ env.REGISTRY }}/gestion-users-backend:${{ env.IMAGE_TAG }}

      - name: Build & push frontend image
        run: |
          docker build -t ${{ env.REGISTRY }}/gestion-users-frontend:${{ env.IMAGE_TAG }} ./frontend
          docker push ${{ env.REGISTRY }}/gestion-users-frontend:${{ env.IMAGE_TAG }}
